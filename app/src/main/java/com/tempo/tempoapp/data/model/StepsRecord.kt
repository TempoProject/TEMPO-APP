package com.tempo.tempoapp.data.model

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import java.time.Instant
import java.time.temporal.ChronoUnit

/**
 * Entity class representing a record of steps taken in the database.
 *
 * @property id The unique identifier of the steps record, auto-generated by the database.
 * @property steps The number of steps taken.
 * @property date The date of the record in milliseconds.
 * @property startTime The start time of the recorded steps in milliseconds.
 * @property endTime The end time of the recorded steps in milliseconds.
 * @property isSent Boolean indicating if the steps record has been sent to the server.
 */

typealias StepsRecordModel = StepsRecord
@Entity(tableName = "steps")
data class StepsRecord(
    @PrimaryKey(true)
    val id: Int = 0,
    @ColumnInfo(name = "steps")
    val steps: Long,
    @ColumnInfo(name = "date")
    val date: Long,
    @ColumnInfo(name = "startTime")
    val startTime: Long,
    @ColumnInfo(name = "endTime")
    val endTime: Long,
    @ColumnInfo(name = "is_sent")
    val isSent: Boolean = false
)

/**
 * Data class representing the JSON structure of a steps record.
 *
 * @property id The unique identifier of the steps record.
 * @property steps The number of steps taken.
 * @property date The date of the record in milliseconds.
 * @property startTime The start time of the recorded steps in milliseconds.
 * @property endTime The end time of the recorded steps in milliseconds.
 */
data class StepsRecordToJson(
    val id: Int = 0,
    val steps: Long,
    val date: Long,
    val startTime: Long,
    val endTime: Long,
)

/**
 * Extension function to convert a [StepsRecord] object to a [StepsRecordToJson] object.
 *
 * @param id The unique identifier of the steps record, default is 0.
 * @return The [StepsRecordToJson] representation of the steps record.
 */
fun StepsRecord.toStepsRecordToJson(id: Int = 0): StepsRecordToJson =
    StepsRecordToJson(id, steps, date, startTime, endTime)

/**
 * Extension function to convert an [Instant] to a timestamp in milliseconds, truncated to the specified [ChronoUnit].
 *
 * @param unit The [ChronoUnit] to truncate the instant to.
 * @return The timestamp in milliseconds.
 */
fun Instant.toTimestamp(unit: ChronoUnit) = this.truncatedTo(unit).toEpochMilli()
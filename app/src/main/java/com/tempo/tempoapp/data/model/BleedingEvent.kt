package com.tempo.tempoapp.data.model

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey

/**
 * Enum class representing the various causes of bleeding events.

enum class BleedingCause {
Spontaneo,
Lesione,
Intervento,
Infortunio,
Altro

}
 */
/**
 * Enum class representing the severity levels of bleeding events.

enum class Severity {
Lieve,
Moderato,
Grave
}
 */
/**
 * A set of possible bleeding sites.

val bleedingSite: Set<String> = setOf(
"Braccio destro",
"Braccio sinistro",
"Busto",
"Gamba destra",
"Gamba sinistra"
)*/

/**
 * Entity class representing a bleeding event in the database.
 *
 * @property id The unique identifier of the bleeding event, auto-generated by the database.
 * @property bleedingSite The site of the bleeding.
 * @property bleedingCause The cause of the bleeding event.
 * @property severity The severity level of the bleeding event.
 * @property painScale The scale of pain experienced during the bleeding event.
 * @property date The date of the bleeding event in milliseconds.
 * @property timestamp The timestamp of when the bleeding event was recorded in milliseconds.
 * @property note Any additional notes regarding the bleeding event.
 * @property isSent Boolean indicating if the event data has been sent to the server.
 */
@Entity(tableName = "bleeding_event")
data class BleedingEvent(
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,
    @ColumnInfo(name = "bleeding_site")
    val bleedingSite: String,
    @ColumnInfo(name = "cause")
    val bleedingCause: String,
    @ColumnInfo(name = "pain_scale")
    val painScale: String,
    @ColumnInfo("event_type")
    val eventType: String?,
    @ColumnInfo("medication_type")
    val medicationType: String?,
    @ColumnInfo("dose")
    val dose: String?,
    @ColumnInfo(name = "dosage_unit")
    val dosageUnit: String?,
    @ColumnInfo("lot_number")
    val lotNumber: String?,
    @ColumnInfo(name = "treatment")
    val treatment: String,
    @ColumnInfo(name = "date")
    val date: Long,
    @ColumnInfo(name = "timestamp")
    val timestamp: Long,
    @ColumnInfo(name = "note")
    val note: String?,
    @ColumnInfo(name = "is_sent")
    val isSent: Boolean = false
)


/**
 * Data class representing the JSON structure of a bleeding event.
 *
 * @property id The unique identifier of the bleeding event.
 * @property bleeding_site The site of the bleeding.
 * @property cause The cause of the bleeding event.
 * @property pain_scale The scale of pain experienced during the bleeding event.
 * @property date The date of the bleeding event in milliseconds.
 * @property timestamp The timestamp of when the bleeding event was recorded in milliseconds.
 * @property note Any additional notes regarding the bleeding event.
 */

// TODO edit if needed (add missing fields, etc.)
data class BleedingEventJson(
    val id: Int,
    val bleedingSite: String,
    val cause: String,
    val painScale: String,
    val treatment: String,
    val date: Long,
    val timestamp: Long,
    val note: String?,
)

/**
 * Extension function to convert a [BleedingEvent] object to a [BleedingEventJson] object.
 *
 * @param id The unique identifier of the bleeding event, default is 0.
 * @return The [BleedingEventJson] representation of the bleeding event.
 */
fun BleedingEvent.toBleedingEventJson(id: Int = 0): BleedingEventJson =
    BleedingEventJson(
        id,
        bleedingSite,
        bleedingCause,
        //severity,
        painScale,

        treatment,
        date,
        timestamp,
        note
    )

